[
  {
    "id": 1,
    "title": "The styled-components happy path",
    "url": "https://www.joshwcomeau.com/css/styled-components",
    "issue_id": {
      "id": 1,
      "dateOfPublishing": "2021-03-03",
      "title": "Toasts, Styled Components and Writing Legible Code Comments",
      "description": "Learn the mental model you need for styled-components, how JavaScript sets can help you, display beautiful toasts, improve code comments, and do you really understand the sort method.",
      "imgURL": "https://scriptified.dev/images/issue-1/issue-page-og.jpg",
      "published_at": "2021-04-18T10:07:39.586Z",
      "created_at": "2021-04-16T06:37:56.738Z",
      "updated_at": "2021-04-18T10:07:39.609Z"
    },
    "description": "Most developers don't fully embrace the power of styled-components, and start working on a project without updating their mental models around styling. This article would explain how you could get most out of it.",
    "published_at": "2021-04-18T10:07:47.656Z",
    "created_at": "2021-04-16T06:36:46.860Z",
    "updated_at": "2021-04-18T15:43:08.883Z",
    "tags": [
      {
        "id": 5,
        "name": "Styled Components",
        "published_at": "2021-04-18T09:57:00.126Z",
        "created_at": "2021-04-18T09:56:21.011Z",
        "updated_at": "2021-04-18T09:57:00.160Z"
      }
    ],
    "authors": [
      {
        "id": 5,
        "Name": "Josh W. Comeau",
        "Website": "https://www.joshwcomeau.com",
        "published_at": "2021-04-18T15:41:21.821Z",
        "created_at": "2021-04-18T15:41:20.177Z",
        "updated_at": "2021-04-18T15:41:21.842Z"
      }
    ],
    "talks": [
      {
        "id": 4,
        "title": "React Query: It’s Time to Break up with your \"Global State”!",
        "url": "https://www.youtube.com/watch?v=seU46c6Jz7E",
        "description": "An increasing amount of data in our React applications is coming from remote and asynchronous sources and, even worse, continues to masquerade as “global state”. In this talk, you’ll get the lowdown on why most of your “global state” isn’t really state at all and how React Query can help you fetch, cache and manage your asynchronous data with a fraction of the effort and code that you’re used to.",
        "author": 23,
        "published_at": "2021-04-18T16:26:13.472Z",
        "created_at": "2021-04-18T16:26:11.731Z",
        "updated_at": "2021-04-18T16:26:13.496Z"
      },
      {
        "id": 5,
        "title": "Deconstructing React",
        "url": "https://youtu.be/f2mMOiCSj5c",
        "description": "Explore how the Virtual DOM, Hooks and suspense for data fetching work in React as Tejas deconstructs React and recreates them in this talk.",
        "author": 24,
        "published_at": "2021-04-18T16:26:46.022Z",
        "created_at": "2021-04-18T16:26:44.261Z",
        "updated_at": "2021-04-18T16:26:46.048Z"
      }
    ]
  },
  {
    "id": 2,
    "title": "What is React: A Visual Introduction For Beginners",
    "url": "https://learnreact.design/posts/what-is-react",
    "issue_id": {
      "id": 1,
      "dateOfPublishing": "2021-03-03",
      "title": "Toasts, Styled Components and Writing Legible Code Comments",
      "description": "Learn the mental model you need for styled-components, how JavaScript sets can help you, display beautiful toasts, improve code comments, and do you really understand the sort method.",
      "imgURL": "https://scriptified.dev/images/issue-1/issue-page-og.jpg",
      "published_at": "2021-04-18T10:07:39.586Z",
      "created_at": "2021-04-16T06:37:56.738Z",
      "updated_at": "2021-04-18T10:07:39.609Z"
    },
    "description": "This article is an introduction to React for beginners, and provides a bird's eye view with an interactive hands-on experience of writing an actual React component. It should probably be the first post that you should go through before getting familiar with its APIs.",
    "published_at": "2021-04-18T10:11:07.232Z",
    "created_at": "2021-04-16T06:49:07.518Z",
    "updated_at": "2021-04-18T15:43:36.016Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      }
    ],
    "authors": [
      {
        "id": 7,
        "Name": "Linton Ye",
        "Website": "https://learnreact.design",
        "published_at": "2021-04-18T15:42:18.246Z",
        "created_at": "2021-04-18T15:42:16.727Z",
        "updated_at": "2021-04-18T15:42:18.276Z"
      }
    ],
    "talks": [
      {
        "id": 3,
        "title": "What the heck is the event loop anyway?",
        "url": "https://youtu.be/8aGhZQkoFbQ",
        "description": "With some handy visualizations, and fun hacks, let’s get an intuitive understanding of what happens when JavaScript runs in this fantastic talk by Philip Roberts.",
        "author": 22,
        "published_at": "2021-04-18T16:24:06.000Z",
        "created_at": "2021-04-18T16:24:01.992Z",
        "updated_at": "2021-04-18T16:25:08.985Z"
      }
    ]
  },
  {
    "id": 3,
    "title": "Before you memo()",
    "url": "https://overreacted.io/before-you-memo/",
    "issue_id": null,
    "description": "You must have used `React.memo` or the memoization hooks like `useCallback` and friends for improving the performance of your components, but do you know there are much simpler ways by which you can optimize for performance without using any memoization.",
    "published_at": "2021-04-18T15:34:09.104Z",
    "created_at": "2021-04-18T15:34:05.886Z",
    "updated_at": "2021-04-18T15:42:59.994Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      },
      {
        "id": 9,
        "name": "Optimization",
        "published_at": "2021-04-18T10:08:30.721Z",
        "created_at": "2021-04-18T10:08:28.889Z",
        "updated_at": "2021-04-18T10:08:30.755Z"
      }
    ],
    "authors": [
      {
        "id": 2,
        "Name": "Dan Abramov",
        "Website": "https://overreacted.io",
        "published_at": "2021-04-18T15:40:21.563Z",
        "created_at": "2021-04-18T15:40:19.945Z",
        "updated_at": "2021-04-18T15:40:21.602Z"
      }
    ],
    "talks": []
  },
  {
    "id": 4,
    "title": "Using fetch with TypeScript",
    "url": "https://kentcdodds.com/blog/using-fetch-with-type-script",
    "issue_id": null,
    "description": "Migrating existing JavaScript files to TypeScript can sometimes be a pain in the ass, especially when they include network requests. In this article, Kent converts a JavaScript file with network requests using fetch to TypeScript, step by step discussing some practices you can follow while migrating.",
    "published_at": "2021-04-18T15:36:08.247Z",
    "created_at": "2021-04-18T15:36:06.357Z",
    "updated_at": "2021-04-18T15:43:16.522Z",
    "tags": [
      {
        "id": 10,
        "name": "TypeScript",
        "published_at": "2021-04-18T10:08:52.457Z",
        "created_at": "2021-04-18T10:08:50.791Z",
        "updated_at": "2021-04-18T10:08:52.494Z"
      },
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      }
    ],
    "authors": [
      {
        "id": 1,
        "Name": "Kent C Dodds",
        "Website": "https://kentcdodds.com",
        "published_at": "2021-04-18T15:40:05.762Z",
        "created_at": "2021-04-18T15:40:02.631Z",
        "updated_at": "2021-04-18T15:40:05.786Z"
      }
    ],
    "talks": []
  },
  {
    "id": 5,
    "title": "Why I moved from styled-components to Tailwind CSS and what's the future of CSS-in-JS?",
    "url": "https://daily.dev/blog/why-i-moved-from-styled-components-to-tailwind-css-and-whats-the-future-of-css-in-js",
    "issue_id": null,
    "description": "Explore with Ido why he had to migrate from using styled-components to Tailwind CSS for [daily.dev](https://daily.dev) despite him considering the former as having a better DX, and what does the future hold for such CSS-in-JS libraries. Fun fact - Scriptified is also built with Tailwind CSS.",
    "published_at": "2021-04-18T15:44:45.399Z",
    "created_at": "2021-04-18T15:44:43.251Z",
    "updated_at": "2021-04-18T15:44:45.430Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      },
      {
        "id": 4,
        "name": "Tailwind CSS",
        "published_at": "2021-04-18T09:57:03.674Z",
        "created_at": "2021-04-18T09:52:02.040Z",
        "updated_at": "2021-04-18T09:57:03.717Z"
      },
      {
        "id": 5,
        "name": "Styled Components",
        "published_at": "2021-04-18T09:57:00.126Z",
        "created_at": "2021-04-18T09:56:21.011Z",
        "updated_at": "2021-04-18T09:57:00.160Z"
      }
    ],
    "authors": [
      {
        "id": 3,
        "Name": "Ido Shamun",
        "Website": null,
        "published_at": "2021-04-18T15:40:41.261Z",
        "created_at": "2021-04-18T15:40:39.421Z",
        "updated_at": "2021-04-18T15:40:41.285Z"
      }
    ],
    "talks": []
  },
  {
    "id": 6,
    "title": "The Complete Guide to useRef() and Refs in React",
    "url": "https://dmitripavlutin.com/react-useref-guide/",
    "issue_id": null,
    "description": "In this guide, Dmitri explains how `React.useRef` works, how it is different from `React.useState` and the use cases where `useRef` can come in handy with examples.",
    "published_at": "2021-04-18T15:45:29.305Z",
    "created_at": "2021-04-18T15:45:26.789Z",
    "updated_at": "2021-04-18T15:45:29.337Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      }
    ],
    "authors": [
      {
        "id": 4,
        "Name": "Dmitri Pavlutin",
        "Website": "https://dmitripavlutin.com/",
        "published_at": "2021-04-18T15:41:00.346Z",
        "created_at": "2021-04-18T15:40:58.975Z",
        "updated_at": "2021-04-18T15:41:00.371Z"
      }
    ],
    "talks": []
  },
  {
    "id": 7,
    "title": "What the heck, z-index??",
    "url": "https://www.joshwcomeau.com/css/stacking-contexts/",
    "issue_id": null,
    "description": "Have you ever been in a situation where you applied a ridiculously high z-index to an element but it still doesn't appear where you want it to be, well you're not alone. In this article Josh explores stacking contexts and explains with examples how it affects the z-index of your elements.",
    "published_at": "2021-04-18T15:46:27.203Z",
    "created_at": "2021-04-18T15:46:25.328Z",
    "updated_at": "2021-04-18T15:46:27.235Z",
    "tags": [
      {
        "id": 6,
        "name": "CSS",
        "published_at": "2021-04-18T09:56:42.829Z",
        "created_at": "2021-04-18T09:56:39.804Z",
        "updated_at": "2021-04-18T09:56:42.910Z"
      }
    ],
    "authors": [
      {
        "id": 5,
        "Name": "Josh W. Comeau",
        "Website": "https://www.joshwcomeau.com",
        "published_at": "2021-04-18T15:41:21.821Z",
        "created_at": "2021-04-18T15:41:20.177Z",
        "updated_at": "2021-04-18T15:41:21.842Z"
      }
    ],
    "talks": []
  },
  {
    "id": 8,
    "title": "Comparing Svelte and React",
    "url": "https://www.jackfranklin.co.uk/blog/comparing-svelte-and-react-javascript/",
    "issue_id": null,
    "description": "Explore with Jack how he migrated his [pomodone](https://pomod.one/) app from React to Svelte, and explains the similarities and differences between both libraries with real-world examples from his app.",
    "published_at": "2021-04-18T15:47:45.988Z",
    "created_at": "2021-04-18T15:46:53.052Z",
    "updated_at": "2021-04-18T15:47:46.025Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      },
      {
        "id": 14,
        "name": "Svelte",
        "published_at": "2021-04-18T10:09:48.082Z",
        "created_at": "2021-04-18T10:09:46.307Z",
        "updated_at": "2021-04-18T10:09:48.111Z"
      }
    ],
    "authors": [
      {
        "id": 8,
        "Name": "Jack Franklin",
        "Website": "https://www.jackfranklin.co.uk",
        "published_at": "2021-04-18T15:47:15.783Z",
        "created_at": "2021-04-18T15:47:14.170Z",
        "updated_at": "2021-04-18T15:47:15.806Z"
      }
    ],
    "talks": []
  },
  {
    "id": 9,
    "title": "How to Read React Errors",
    "url": "https://daveceddia.com/fix-react-errors/",
    "issue_id": null,
    "description": "When working with React you must have got errors like `Cannot read property map of undefined` . In this article Dave discusses how to fix the above error specifically and how you should approach while fixing errors in general.",
    "published_at": "2021-04-18T15:48:57.121Z",
    "created_at": "2021-04-18T15:48:55.497Z",
    "updated_at": "2021-04-18T15:48:57.152Z",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "published_at": "2021-04-18T09:56:56.626Z",
        "created_at": "2021-04-18T09:51:26.520Z",
        "updated_at": "2021-04-18T09:56:56.650Z"
      }
    ],
    "authors": [
      {
        "id": 6,
        "Name": "Dave Ceddia",
        "Website": "https://daveceddia.com",
        "published_at": "2021-04-18T15:41:45.909Z",
        "created_at": "2021-04-18T15:41:44.216Z",
        "updated_at": "2021-04-18T15:41:45.931Z"
      }
    ],
    "talks": []
  },
  {
    "id": 10,
    "title": "JavaScript Closures",
    "url": "https://whatthefuck.is/closure",
    "issue_id": null,
    "description": "Much of what we can do with JavaScript is the result of the way closures work and they are very critical part of React. Understand how they work with examples in this article with Dan.",
    "published_at": "2021-04-18T15:49:32.097Z",
    "created_at": "2021-04-18T15:49:30.182Z",
    "updated_at": "2021-04-18T15:49:32.128Z",
    "tags": [
      {
        "id": 2,
        "name": "JavaScript",
        "published_at": "2021-04-18T09:56:53.651Z",
        "created_at": "2021-04-18T09:51:43.044Z",
        "updated_at": "2021-04-18T09:56:53.690Z"
      }
    ],
    "authors": [
      {
        "id": 2,
        "Name": "Dan Abramov",
        "Website": "https://overreacted.io",
        "published_at": "2021-04-18T15:40:21.563Z",
        "created_at": "2021-04-18T15:40:19.945Z",
        "updated_at": "2021-04-18T15:40:21.602Z"
      }
    ],
    "talks": []
  }
]
